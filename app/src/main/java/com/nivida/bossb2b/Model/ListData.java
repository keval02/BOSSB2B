package com.nivida.bossb2b.Model;import android.content.ContentValues;import android.content.Context;import android.database.Cursor;import android.database.sqlite.SQLiteDatabase;import android.database.sqlite.SQLiteOpenHelper;import com.nivida.bossb2b.Bean.BeanVendor;import java.util.ArrayList;import java.util.List;/** * Created by NWSPL-17 on 20-Apr-17. */public class ListData extends SQLiteOpenHelper {    private static final String DB_NAME = "BOSSDSR";    private static final int VER = 1;    private static final String TABLE_DIS_RE = "disre_names";    public static final String user_id = "user_id";    public static final String role_id = "role_id";    public static final String firm_name = "firm_name";    public static final String address = "address";    public static final String email = "email";    public ListData(Context context) {        super(context, DB_NAME, null, VER);    }    @Override    public void onCreate(SQLiteDatabase db) {        String query = "CREATE TABLE " + TABLE_DIS_RE + "(" + user_id + " TEXT," + role_id + " TEXT," + firm_name + " TEXT , " + address + " TEXT ," + email + " TEXT )";        db.execSQL(query);    }    @Override    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {        db.execSQL("DROP TABLE IF EXISTS" + TABLE_DIS_RE);        onCreate(db);    }    public void addTolist(BeanVendor beanVendors) {        BeanVendor.User user = new BeanVendor.User();        BeanVendor.Address address =  new BeanVendor.Address();        BeanVendor.Distributor distributor = new BeanVendor.Distributor();        SQLiteDatabase database = this.getWritableDatabase();        ContentValues values = new ContentValues();        values.put("user_id", user.getUserid());        values.put("role_id" , user.getRoleID());        values.put("firm_name", distributor.getFirmShopName());        values.put("address", address.getCity().getName());        values.put("email", user.getEmailID());        database.insert(TABLE_DIS_RE, null, values);    }    public void addAllVendors(List<BeanVendor> vendorList){        SQLiteDatabase db = this.getWritableDatabase();        for(BeanVendor vendor : vendorList){            ContentValues values = new ContentValues();            values.put("user_id", vendor.getVendor_id());            values.put("firm_name", vendor.getCompany_name());            values.put("role_id" , vendor.getRole_id());            values.put("address", vendor.getAddress());            values.put("email", vendor.getEmail_id());            db.insert(TABLE_DIS_RE, null, values);        }        db.close();    }    public List<BeanVendor> getAllData() {        List<BeanVendor> vendors = new ArrayList<BeanVendor>();        String selectQuery = "SELECT * FROM " + TABLE_DIS_RE;        SQLiteDatabase database = this.getWritableDatabase();        Cursor cursor = database.rawQuery(selectQuery, null);        if (cursor.moveToFirst()) {            do {                BeanVendor beanVendor = new BeanVendor();                BeanVendor.User user = new BeanVendor.User();                BeanVendor.Address address =  new BeanVendor.Address();                BeanVendor.Distributor distributor = new BeanVendor.Distributor();                BeanVendor.City city = new BeanVendor.City();                user.setUserid(cursor.getString(0));                user.setRoleID(cursor.getString(1));                distributor.setFirmShopName(cursor.getString(2));                city.setName(cursor.getString(3));                user.setEmailID(cursor.getString(4));                address.setCity(city);                beanVendor.setUser(user);                beanVendor.setDistributor(distributor);                beanVendor.setAddress(address);                vendors.add(beanVendor);            } while (cursor.moveToNext());        }        return vendors;    }    public void updateList(BeanVendor beanVendor) {        SQLiteDatabase database = this.getWritableDatabase();        ContentValues values = new ContentValues();        values.put("user_id", beanVendor.getVendor_id());        values.put("firm_name", beanVendor.getCompany_name());        values.put("address", beanVendor.getAddress());        values.put("email", beanVendor.getEmail_id());        database.update(TABLE_DIS_RE, values, user_id + "=?", new String[]{beanVendor.getVendor_id()});        database.close();    }    public void deleteList() {        SQLiteDatabase database = this.getWritableDatabase();        database.delete(TABLE_DIS_RE,null,null);        database.close();    }}